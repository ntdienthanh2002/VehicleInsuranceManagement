//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VehicleInsuranceManagement.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class Claim
    {

        [Display(Name = "Claim Number")]
        public int ClaimNumber { get; set; }

        [Display(Name = "Policy Number")]
        [Required(ErrorMessage = "Please select Policy Number.")]
        public int PolicyNumber { get; set; }

        [Display(Name = "Place Of Accident")]
        [Required(ErrorMessage = "Please enter Place of Accident.")]
        public string PlaceOfAccident { get; set; }

        [Display(Name = "Date Of Accident")]
        [Required(ErrorMessage = "Please enter Date of Accident.")]
        [DataType(DataType.Date)]
        [ValidateDate]
        public System.DateTime DateOfAccident { get; set; }

        [Display(Name = "Insured Amount")]
        public Nullable<decimal> InsuredAmount { get; set; }

        [Display(Name = "Claimable Amount")]
        [Required(ErrorMessage = "Please enter Claimable Amount.")]
        public decimal ClaimableAmount { get; set; }

        [Display(Name = "Status")]
        public string Status { get; set; }

        public virtual OrderPolicy OrderPolicy { get; set; }
    }
    public class ValidateDate : ValidationAttribute
    {
        protected override ValidationResult IsValid(object date, ValidationContext validationContext)
        {
            if (date == null)
            {
                return new ValidationResult("Please enter Date of Accident.");
            }
            else
            {
                DateTime day = DateTime.Today;
                return ((DateTime)date < DateTime.Now)
                    ? ValidationResult.Success
                    : new ValidationResult("Date of Accident must be less than " + day.Day + "/" + day.Month + "/" + day.Year);
            }
        }
    }

}
